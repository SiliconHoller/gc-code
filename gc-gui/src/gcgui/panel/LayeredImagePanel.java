/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImagePanel.java
 *
 * Created on Aug 1, 2010, 12:00:08 AM
 */

package gcgui.panel;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;

/**
 *
 * @author david
 */
public class LayeredImagePanel extends javax.swing.JPanel {

    private BufferedImage bimg;
    private BufferedImage fimg;
    private double iw;
    private double ih;
    private double xscale;
    private double yscale;

    /** Creates new form ImagePanel */
    public LayeredImagePanel() {
        bimg = null;
        fimg = null;
        initComponents();
        
    }

    public void setBackgroundImage(BufferedImage bimg) {
        this.bimg = bimg;
        if (bimg != null) {
            iw = (double)bimg.getWidth();
            ih = (double)bimg.getHeight();
        } else {
            iw = 1.0;
            ih = 1.0;
        }
        repaint();
    }

    public void setForegroundImage(BufferedImage fimg) {
        this.fimg = fimg;
        repaint();
    }

    public BufferedImage getBackgroundImage() {
        return bimg;
    }

    public BufferedImage getForegroundImage() {
        return fimg;
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        xscale = ((double)getWidth())/iw;
        yscale = ((double)getHeight())/ih;
        AffineTransform at = AffineTransform.getScaleInstance(xscale,yscale);
        AffineTransformOp aop = new AffineTransformOp(at,AffineTransformOp.TYPE_BICUBIC);
        Graphics2D bg2 = (Graphics2D) g;
        if (bimg != null) {

            bg2.drawImage(bimg, aop, 0,0);
        }
        if (fimg != null) {

            bg2.drawImage(fimg, aop, 0,0);
        }

    }

    public int getImageX(double mouseX) {
        return (int)(mouseX/xscale);
    }

    public int getImageY(double mouseY) {
        return (int)(mouseY/yscale);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


}
