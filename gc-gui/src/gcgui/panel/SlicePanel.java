/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * ImagePanel.java
 *
 * Created on Aug 1, 2010, 12:00:08 AM
 */

package gcgui.panel;

import gcgui.data.Volume;
import gcgui.event.CoordinateListener;
import gcgui.event.RenderListener;
import gcgui.img.MriRenderer;
import gcgui.img.SubVolRenderer;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseEvent;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.util.Vector;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author david
 */
public abstract class SlicePanel extends javax.swing.JPanel implements RenderListener, ChangeListener {

    protected BufferedImage img;
    protected double iw;
    protected double ih;
    protected double xscale;
    protected double yscale;
    protected Volume volume;
    protected MriRenderer mr;
    protected SubVolRenderer svr;
    protected Vector<CoordinateListener> cv;

    /** Creates new form ImagePanel */
    public SlicePanel() {

        initComponents();
        img = null;
        cv = new Vector<CoordinateListener>();
        mr = new MriRenderer();
    }


    protected abstract void drawSlice();

    public abstract void drawSub();

    public void setImage(BufferedImage img) {
        this.img = img;
        if (img != null) {
            iw = (double)img.getWidth();
            ih = (double)img.getHeight();
            drawSub();
        } else {
            iw = 1.0;
            ih = 1.0;
        }
        
        repaint();
    }

    public BufferedImage getImage() {
        return img;
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        if (img != null) {
            Graphics2D g2 = (Graphics2D) g;
            xscale = ((double)getWidth())/iw;
            yscale = ((double)getHeight())/ih;
            AffineTransform at = AffineTransform.getScaleInstance(xscale,yscale);
            at.rotate(Math.PI, ((double)img.getWidth()/2.0), ((double)img.getHeight()/2.0));
            AffineTransformOp aop = new AffineTransformOp(at,AffineTransformOp.TYPE_BICUBIC);
            g2.drawImage(img, aop, 0,0);
        }

    }

    protected int decodeClickX(int clickX) {
        return (int)((double)clickX/xscale);
    }

    protected int decodeClickY(int clickY) {
        return (int)((double)clickY/yscale);
    }

    protected abstract void setMax();


    public abstract void adjustX(int num);
    public abstract void adjustY(int num);
    public abstract void adjustZ(int num);

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addMouseWheelListener(new java.awt.event.MouseWheelListener() {
            public void mouseWheelMoved(java.awt.event.MouseWheelEvent evt) {
                formMouseWheelMoved(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        mouseClicked(evt);
    }//GEN-LAST:event_formMouseClicked

    private void formMouseWheelMoved(java.awt.event.MouseWheelEvent evt) {//GEN-FIRST:event_formMouseWheelMoved
        wheelMoved(evt.getWheelRotation());
    }//GEN-LAST:event_formMouseWheelMoved

    public abstract void setXVal(int x);

    public abstract void setYVal(int y);

    public abstract void setZVal(int z);


    public abstract int getZVal();

    public abstract int getXVal();

    public abstract int getYVal();


    public void setVolume(Volume volume) {
        this.volume = volume;
        setMax();
    }

    public void setSubVolRenderer(SubVolRenderer svr) {
        this.svr = svr;
        svr.addChangeListener(this);
    }

    public void stateChanged(ChangeEvent e) {
        drawSlice();
    }

    public double getXScale() {
        return xscale;
    }

    public double getYScale() {
        return yscale;
    }

    public void addCoordinateListener(CoordinateListener cl) {
        cv.add(cl);
    }

    public void removeCoordinateListener(CoordinateListener cl) {
        cv.remove(cl);
    }

    public abstract void fireXChange();

    public abstract void fireYChange();

    public abstract void fireZChange();

    protected abstract void wheelMoved(int numClicks);

    protected abstract void mouseClicked(MouseEvent evt);




    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables


}
